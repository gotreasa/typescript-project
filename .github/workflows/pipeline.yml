# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.ibm.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Pipeline

env:
  NODE_VERSION: 18.18

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@master

  eslint-verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: 'npm'
      - run: npm ci
      - name: Lint the code
        run: npm run lint:verify .

  prettier-verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: 'npm'
      - run: npm ci
      - name: Prettify the code
        run: npm run prettier:verify .

  snyk_test:
    runs-on: ubuntu-latest
    needs: [eslint-verify, prettier-verify]

    steps:
      - uses: actions/checkout@main
      - name: Test the code for security vulnerabilities
        uses: snyk/actions/node@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: '${{ secrets.SNYK_TOKEN}}'
        with:
          command: test --all-projects

  test_and_coverage:
    runs-on: ubuntu-latest
    needs: [eslint-verify, prettier-verify]

    steps:
      - uses: warchant/setup-sonar-scanner@master
      - name: Checkout the code
        uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: 'npm'
      - run: npm ci
      - run: touch .env
      - name: Run all of the tests
        run: npm test
      - name: run the Sonar Scanner
        run: sonar-scanner
          -Dsonar.login="${{ secrets.SONAR_TOKEN }}"
